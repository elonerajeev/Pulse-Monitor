name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install frontend dependencies
        run: npm install
        working-directory: ./frontend

      - name: Lint frontend
        run: npm run lint
        working-directory: ./frontend
        continue-on-error: true

  build-and-push:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile.prod
          push: true
          tags: ${{ secrets.DOCKERHUB_USER }}/frontend:latest

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile.prod
          push: true
          tags: ${{ secrets.DOCKERHUB_USER }}/backend:latest

      - name: Build and push service image
        uses: docker/build-push-action@v4
        with:
          context: ./service
          file: ./service/Dockerfile.prod
          push: true
          tags: ${{ secrets.DOCKERHUB_USER }}/service:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Build frontend
        run: npm install && npm run build
        working-directory: ./frontend

      - name: Deploy Frontend to Netlify
        uses: nwtgck/actions-netlify@v2
        with:
          publish-dir: './frontend/dist'
          production-branch: main
          deploy-message: "Deploy from GitHub Actions"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1

      - name: Deploy Backend to Render
        run: curl -X POST ${{ secrets.RENDER_BACKEND_DEPLOY_HOOK_URL }}

      # - name: Deploy Service to Render
      #   run: curl -X POST ${{ secrets.RENDER_SERVICE_DEPLOY_HOOK_URL }}
